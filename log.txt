[Container] 2025/09/11 02:13:06.739027 Running on CodeBuild On-demand
[Container] 2025/09/11 02:13:06.739040 Waiting for agent ping
[Container] 2025/09/11 02:13:06.940593 Waiting for DOWNLOAD_SOURCE
[Container] 2025/09/11 02:13:08.373594 Phase is DOWNLOAD_SOURCE
[Container] 2025/09/11 02:13:08.374702 CODEBUILD_SRC_DIR=/codebuild/output/src2681/src
[Container] 2025/09/11 02:13:08.374884 CODEBUILD_SRC_DIR_DOCKERFILES=/codebuild/output/src2681/src/s3/02
[Container] 2025/09/11 02:13:08.374885 CODEBUILD_SRC_DIR_HANDLERS=/codebuild/output/src2681/src/s3/01
[Container] 2025/09/11 02:13:08.375531 YAML location is /codebuild/readonly/buildspec.yml
[Container] 2025/09/11 02:13:08.380163 Processing environment variables
[Container] 2025/09/11 02:13:08.597744 No runtime version selected in buildspec.
[Container] 2025/09/11 02:13:08.624817 Moving to directory /codebuild/output/src2681/src
[Container] 2025/09/11 02:13:08.624841 Cache is not defined in the buildspec
[Container] 2025/09/11 02:13:08.694964 Skip cache due to: no paths specified to be cached
[Container] 2025/09/11 02:13:08.695187 Registering with agent
[Container] 2025/09/11 02:13:08.730223 Phases found in YAML: 3
[Container] 2025/09/11 02:13:08.730246  POST_BUILD: 11 commands
[Container] 2025/09/11 02:13:08.730251  PRE_BUILD: 7 commands
[Container] 2025/09/11 02:13:08.730255  BUILD: 2 commands
[Container] 2025/09/11 02:13:08.730566 Phase complete: DOWNLOAD_SOURCE State: SUCCEEDED
[Container] 2025/09/11 02:13:08.730579 Phase context status code:  Message: 
[Container] 2025/09/11 02:13:08.862818 Entering phase INSTALL
[Container] 2025/09/11 02:13:08.899798 Phase complete: INSTALL State: SUCCEEDED
[Container] 2025/09/11 02:13:08.899817 Phase context status code:  Message: 
[Container] 2025/09/11 02:13:08.938483 Entering phase PRE_BUILD
[Container] 2025/09/11 02:13:08.973971 Running command export SRC_DIR="$CODEBUILD_SRC_DIR/$SOURCE_REPOSITORY"

[Container] 2025/09/11 02:13:08.977895 Running command git clone --single-branch --branch $SOURCE_BRANCH https://x-access-token:$SOURCE_REPOSITORY_CREDENTIALS@$SOURCE_REPOSITORY.git $SRC_DIR
Cloning into '/codebuild/output/src2681/src/github.com/DylanCkawalec/warp-engine'...

[Container] 2025/09/11 02:13:10.914051 Running command export RESOLVED_SOURCE_VERSION=$(git -C $SRC_DIR rev-parse HEAD)

[Container] 2025/09/11 02:13:10.919315 Running command aws ecr get-login-password | docker login --username AWS --password-stdin $PROJECT_BUILD_IMAGES_REPOSITORY_URI
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credential-stores

Login Succeeded

[Container] 2025/09/11 02:13:24.879765 Running command cp -r $CODEBUILD_SRC_DIR_HANDLERS $SRC_DIR/alpic

[Container] 2025/09/11 02:13:24.884671 Running command export TRANSPORT_TYPE=$( (grep -r "import.*from ['\"]@modelcontextprotocol/sdk/server/\(stdio\|sse\|streamableHttp\)[.'\"]" --include="*.ts" . | grep -o -E "(stdio|sse|streamableHttp)" | head -1 | tr '[:upper:]' '[:lower:]';grep -r "mcp.run(.*transport=['\"]\(stdio\|sse\|streamable-http\|http\)['\"]" --include="*.py" . | grep -o -E "(stdio|sse|streamable-http|http)" | head -1;grep -r "mcp.run(" --include="*.py" . | head -1 | sed 's/.*/stdio/') | head -1)

[Container] 2025/09/11 02:13:24.958667 Running command if [ -z "$TRANSPORT_TYPE" ]; then echo "Error: No MCP transport found"; exit 1; else echo "MCP transport: $TRANSPORT_TYPE"; fi
MCP transport: stdio

[Container] 2025/09/11 02:13:24.962838 Phase complete: PRE_BUILD State: SUCCEEDED
[Container] 2025/09/11 02:13:24.962856 Phase context status code:  Message: 
[Container] 2025/09/11 02:13:25.002033 Entering phase BUILD
[Container] 2025/09/11 02:13:25.003445 Running command docker buildx build --provenance=false --platform linux/amd64 --build-arg INSTALL_COMMAND="${BUILD_ARG_INSTALL_COMMAND}" --build-arg BUILD_COMMAND="${BUILD_ARG_BUILD_COMMAND}" --build-arg BUILD_OUTPUT_DIR="${BUILD_ARG_BUILD_OUTPUT_DIR}" --build-arg START_COMMAND="${BUILD_ARG_START_COMMAND}" --build-arg TRANSPORT_TYPE=$TRANSPORT_TYPE -t $PROJECT_BUILD_IMAGES_REPOSITORY_URI:$RESOLVED_SOURCE_VERSION -t $PROJECT_BUILD_IMAGES_REPOSITORY_URI:latest -f $CODEBUILD_SRC_DIR_DOCKERFILES/$RUNTIME $SRC_DIR
#0 building with "default" instance using docker driver

#1 [internal] load build definition from python3.13
#1 transferring dockerfile: 2.17kB done
#1 DONE 0.0s

#2 [internal] load metadata for public.ecr.aws/lambda/python:3.13
#2 ...

#3 [internal] load metadata for ghcr.io/astral-sh/uv:0.8.15
#3 DONE 0.3s

#2 [internal] load metadata for public.ecr.aws/lambda/python:3.13
#2 DONE 0.5s

#4 [internal] load metadata for public.ecr.aws/lambda/nodejs:22
#4 DONE 0.5s

#5 [internal] load .dockerignore
#5 transferring context: 2B done
#5 DONE 0.0s

#6 [uv 1/1] FROM ghcr.io/astral-sh/uv:0.8.15@sha256:a5727064a0de127bdb7c9d3c1383f3a9ac307d9f2d8a391edc7896c54289ced0
#6 resolve ghcr.io/astral-sh/uv:0.8.15@sha256:a5727064a0de127bdb7c9d3c1383f3a9ac307d9f2d8a391edc7896c54289ced0 0.0s done
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 482.62kB 0.0s done
#7 DONE 0.1s

#8 [nodejs 1/2] FROM public.ecr.aws/lambda/nodejs:22@sha256:8d25e3128e34b3c75dd15dca017fa512d05ea7e036ba47976ca7c14462fe9f7c
#8 resolve public.ecr.aws/lambda/nodejs:22@sha256:8d25e3128e34b3c75dd15dca017fa512d05ea7e036ba47976ca7c14462fe9f7c 0.1s done
#8 sha256:8d25e3128e34b3c75dd15dca017fa512d05ea7e036ba47976ca7c14462fe9f7c 772B / 772B done
#8 sha256:7fd9e7c76cac8af7b5ad763578418eb2f83d910211b446d3a5cdaa2fdfb25e25 1.58kB / 1.58kB done
#8 sha256:b445dc09b1e4f7f870312b321ea59af99572d4be1d4738f5e7b83639ae33bd7b 4.65kB / 4.65kB done
#8 sha256:261756bd1a975bdc797ece9842cb8c35a9f90b829bbc617d3bd31c695b5f9748 0B / 36.76MB 0.1s
#8 sha256:261756bd1a975bdc797ece9842cb8c35a9f90b829bbc617d3bd31c695b5f9748 13.63MB / 36.76MB 0.2s
#8 sha256:cf3f8ccf59bb8a5521b534e49ed2704708ee64e1e932f781f054797204e9d4ef 2.96MB / 2.96MB 0.2s
#8 sha256:261756bd1a975bdc797ece9842cb8c35a9f90b829bbc617d3bd31c695b5f9748 27.46MB / 36.76MB 0.3s
#8 sha256:cf3f8ccf59bb8a5521b534e49ed2704708ee64e1e932f781f054797204e9d4ef 2.96MB / 2.96MB 0.2s done
#8 sha256:261756bd1a975bdc797ece9842cb8c35a9f90b829bbc617d3bd31c695b5f9748 36.76MB / 36.76MB 0.4s done
#8 sha256:34a57df743c3516c5e5d6ebf8b30d6c20034d81ec2cfffccb00a8f1bd9b45aa7 88.12kB / 88.12kB 0.4s done
#8 sha256:d3b15c10cb0f03c9f8ab45e4fc08d68d59491a6ba80d4f878ebfa23c8a9c4362 0B / 23.05MB 0.5s
#8 sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 0B / 64.80MB 0.5s
#8 sha256:801d98b6019ef74775f456673b60226088f4aef82d52ed2741dee9b158a3d552 416B / 416B 0.5s done
#8 sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 5.92MB / 64.80MB 0.6s
#8 sha256:d3b15c10cb0f03c9f8ab45e4fc08d68d59491a6ba80d4f878ebfa23c8a9c4362 5.24MB / 23.05MB 0.7s
#8 sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 22.02MB / 64.80MB 0.7s
#8 sha256:d3b15c10cb0f03c9f8ab45e4fc08d68d59491a6ba80d4f878ebfa23c8a9c4362 14.89MB / 23.05MB 0.8s
#8 sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 27.26MB / 64.80MB 0.8s
#8 sha256:d3b15c10cb0f03c9f8ab45e4fc08d68d59491a6ba80d4f878ebfa23c8a9c4362 23.05MB / 23.05MB 0.9s
#8 sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 35.65MB / 64.80MB 0.9s
#8 sha256:d3b15c10cb0f03c9f8ab45e4fc08d68d59491a6ba80d4f878ebfa23c8a9c4362 23.05MB / 23.05MB 0.9s done
#8 sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 55.57MB / 64.80MB 1.1s
#8 sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 64.80MB / 64.80MB 1.2s
#8 sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 64.80MB / 64.80MB 1.3s done
#8 extracting sha256:261756bd1a975bdc797ece9842cb8c35a9f90b829bbc617d3bd31c695b5f9748 0.7s
#8 ...

#6 [uv 1/1] FROM ghcr.io/astral-sh/uv:0.8.15@sha256:a5727064a0de127bdb7c9d3c1383f3a9ac307d9f2d8a391edc7896c54289ced0
#6 sha256:a5727064a0de127bdb7c9d3c1383f3a9ac307d9f2d8a391edc7896c54289ced0 2.19kB / 2.19kB done
#6 sha256:1ececcacbbde240ffca54d400df86e4fdd38f29c1a2366299279d197e92eaed3 669B / 669B done
#6 sha256:b41f16da0a4ff28eaba924250b5c0600dea70fe45f025c028440903b649e7009 1.30kB / 1.30kB done
#6 sha256:b5c1d8a02beb46ee3f43053f7563d00d605bb930f63bfbcececd04a7455f5b80 21.39MB / 21.39MB 1.3s done
#6 sha256:62e48a8cb359f6e3f4375bbaac58fc12a40797b94590ce447f61d2f3f190c493 98B / 98B 1.3s done
#6 extracting sha256:b5c1d8a02beb46ee3f43053f7563d00d605bb930f63bfbcececd04a7455f5b80 0.9s done
#6 extracting sha256:62e48a8cb359f6e3f4375bbaac58fc12a40797b94590ce447f61d2f3f190c493 done
#6 DONE 2.6s

#8 [nodejs 1/2] FROM public.ecr.aws/lambda/nodejs:22@sha256:8d25e3128e34b3c75dd15dca017fa512d05ea7e036ba47976ca7c14462fe9f7c
#8 extracting sha256:34a57df743c3516c5e5d6ebf8b30d6c20034d81ec2cfffccb00a8f1bd9b45aa7
#8 extracting sha256:34a57df743c3516c5e5d6ebf8b30d6c20034d81ec2cfffccb00a8f1bd9b45aa7 done
#8 extracting sha256:801d98b6019ef74775f456673b60226088f4aef82d52ed2741dee9b158a3d552 done
#8 extracting sha256:cf3f8ccf59bb8a5521b534e49ed2704708ee64e1e932f781f054797204e9d4ef 0.1s
#8 extracting sha256:cf3f8ccf59bb8a5521b534e49ed2704708ee64e1e932f781f054797204e9d4ef 0.1s done
#8 extracting sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e
#8 extracting sha256:a838507c70456b68b3559446c4eb039031bf2a668da533980dd9f13cbc258c6e 3.4s done
#8 extracting sha256:d3b15c10cb0f03c9f8ab45e4fc08d68d59491a6ba80d4f878ebfa23c8a9c4362
#8 ...

#9 [builder 1/2] FROM public.ecr.aws/lambda/python:3.13@sha256:1618ba836b700c8bf3daa2637e0949a323724bfca49b751a4ff4614295da9402
#9 resolve public.ecr.aws/lambda/python:3.13@sha256:1618ba836b700c8bf3daa2637e0949a323724bfca49b751a4ff4614295da9402 0.1s done
#9 sha256:261756bd1a975bdc797ece9842cb8c35a9f90b829bbc617d3bd31c695b5f9748 36.76MB / 36.76MB 0.4s done
#9 sha256:6aa49205a964781a82b0e3f9411ca260714bd3ece7b45b1d7ce24bc4b18d823f 88.13kB / 88.13kB 0.1s done
#9 sha256:1618ba836b700c8bf3daa2637e0949a323724bfca49b751a4ff4614295da9402 772B / 772B done
#9 sha256:41fbc877d8680baeffd121097d9ee90744610d0e5c518fadfec273309bb953a0 1.58kB / 1.58kB done
#9 sha256:b7d3cdfbb732fe6d1099312f213fad0b0f32833c188c1761642332f416729a7c 4.65kB / 4.65kB done
#9 sha256:2c246d9c8dfff2e3edacc7397e09507aa4334f045817569c945e36e62bd440ba 416B / 416B 0.1s done
#9 sha256:b04a5db728bd1ab1c35788bd461a5858bfe51e6282d8f9bc05ac037620b26763 155.01MB / 155.01MB 1.7s done
#9 sha256:36b929a4ae1df723145f8cf737b0a8823400d51e6a098268befa84ce872baadf 14.19kB / 14.19kB 0.3s done
#9 extracting sha256:261756bd1a975bdc797ece9842cb8c35a9f90b829bbc617d3bd31c695b5f9748 2.6s done
#9 extracting sha256:6aa49205a964781a82b0e3f9411ca260714bd3ece7b45b1d7ce24bc4b18d823f done
#9 extracting sha256:2c246d9c8dfff2e3edacc7397e09507aa4334f045817569c945e36e62bd440ba done
#9 extracting sha256:cf3f8ccf59bb8a5521b534e49ed2704708ee64e1e932f781f054797204e9d4ef 0.2s done
#9 extracting sha256:b04a5db728bd1ab1c35788bd461a5858bfe51e6282d8f9bc05ac037620b26763 6.4s
#9 ...

#8 [nodejs 1/2] FROM public.ecr.aws/lambda/nodejs:22@sha256:8d25e3128e34b3c75dd15dca017fa512d05ea7e036ba47976ca7c14462fe9f7c
#8 extracting sha256:d3b15c10cb0f03c9f8ab45e4fc08d68d59491a6ba80d4f878ebfa23c8a9c4362 3.8s done
#8 DONE 11.1s

#10 [nodejs 2/2] RUN npm install -g @modelcontextprotocol/sdk
#10 ...

#9 [builder 1/2] FROM public.ecr.aws/lambda/python:3.13@sha256:1618ba836b700c8bf3daa2637e0949a323724bfca49b751a4ff4614295da9402
#9 extracting sha256:b04a5db728bd1ab1c35788bd461a5858bfe51e6282d8f9bc05ac037620b26763 7.9s done
#9 extracting sha256:36b929a4ae1df723145f8cf737b0a8823400d51e6a098268befa84ce872baadf done
#9 DONE 11.8s

#11 [builder 2/2] RUN --mount=from=uv,source=/uv,target=/bin/uv     --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv export --frozen --no-emit-workspace --no-dev --no-editable -o requirements.txt &&     uv pip install -r requirements.txt --target "/var/task"
#11 0.342 error: Failed to parse `uv.lock`
#11 0.343   Caused by: TOML parse error at line 8, column 1
#11 0.343   |
#11 0.343 8 | [[package]]
#11 0.343   | ^^^^^^^^^^^
#11 0.343 missing field `source`
#11 ERROR: process "/bin/sh -c uv export --frozen --no-emit-workspace --no-dev --no-editable -o requirements.txt &&     uv pip install -r requirements.txt --target \"${LAMBDA_TASK_ROOT}\"" did not complete successfully: exit code: 2

#10 [nodejs 2/2] RUN npm install -g @modelcontextprotocol/sdk
#10 CANCELED
------
 > [builder 2/2] RUN --mount=from=uv,source=/uv,target=/bin/uv     --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv export --frozen --no-emit-workspace --no-dev --no-editable -o requirements.txt &&     uv pip install -r requirements.txt --target "/var/task":
: Failed to parse `uv.lock`
0.343   Caused by: TOML parse error at line 8, column 1
0.343   |
0.343 8 | [[package]]
0.343   | ^^^^^^^^^^^
0.343 missing field `source`
------
python3.13:25
--------------------
  24 |     # files change, but remains robust to changes in the application code.
  25 | >>> RUN --mount=from=uv,source=/uv,target=/bin/uv \
  26 | >>>     --mount=type=cache,target=/root/.cache/uv \
  27 | >>>     --mount=type=bind,source=uv.lock,target=uv.lock \
  28 | >>>     --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
  29 | >>>     uv export --frozen --no-emit-workspace --no-dev --no-editable -o requirements.txt && \
  30 | >>>     uv pip install -r requirements.txt --target "${LAMBDA_TASK_ROOT}"
  31 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c uv export --frozen --no-emit-workspace --no-dev --no-editable -o requirements.txt &&     uv pip install -r requirements.txt --target \"${LAMBDA_TASK_ROOT}\"" did not complete successfully: exit code: 2

[Container] 2025/09/11 02:13:38.772058 Command did not exit successfully docker buildx build --provenance=false --platform linux/amd64 --build-arg INSTALL_COMMAND="${BUILD_ARG_INSTALL_COMMAND}" --build-arg BUILD_COMMAND="${BUILD_ARG_BUILD_COMMAND}" --build-arg BUILD_OUTPUT_DIR="${BUILD_ARG_BUILD_OUTPUT_DIR}" --build-arg START_COMMAND="${BUILD_ARG_START_COMMAND}" --build-arg TRANSPORT_TYPE=$TRANSPORT_TYPE -t $PROJECT_BUILD_IMAGES_REPOSITORY_URI:$RESOLVED_SOURCE_VERSION -t $PROJECT_BUILD_IMAGES_REPOSITORY_URI:latest -f $CODEBUILD_SRC_DIR_DOCKERFILES/$RUNTIME $SRC_DIR exit status 1
[Container] 2025/09/11 02:13:38.778129 Phase complete: BUILD State: FAILED_WITH_ABORT
[Container] 2025/09/11 02:13:38.778146 Phase context status code: COMMAND_EXECUTION_ERROR Message: Error while executing command: docker buildx build --provenance=false --platform linux/amd64 --build-arg INSTALL_COMMAND="${BUILD_ARG_INSTALL_COMMAND}" --build-arg BUILD_COMMAND="${BUILD_ARG_BUILD_COMMAND}" --build-arg BUILD_OUTPUT_DIR="${BUILD_ARG_BUILD_OUTPUT_DIR}" --build-arg START_COMMAND="${BUILD_ARG_START_COMMAND}" --build-arg TRANSPORT_TYPE=$TRANSPORT_TYPE -t $PROJECT_BUILD_IMAGES_REPOSITORY_URI:$RESOLVED_SOURCE_VERSION -t $PROJECT_BUILD_IMAGES_REPOSITORY_URI:latest -f $CODEBUILD_SRC_DIR_DOCKERFILES/$RUNTIME $SRC_DIR. Reason: exit status 1